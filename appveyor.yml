#---------------------------------#
#      environment configuration  #
#---------------------------------#
os: unstable
install:
  - cinst -y pester

#---------------------------------#
#      build configuration        #
#---------------------------------#
branches:
  only:
    - master

version: 0.7.{build}

pull_requests:
  do_not_increment_build_number: true

nuget:
  disable_publish_on_pr: true

build: false
#---------------------------------#
#      test configuration         #
#---------------------------------#

test_script:
    - ps: |
        $testResultsFile = ".\TestsResults.xml"
        $res = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -PassThru
        (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
        if ($res.FailedCount -gt 0) {
            throw "$($res.FailedCount) tests failed."
        }

#---------------------------------#
#      deployment configuration   #
#---------------------------------#

# scripts to run before deployment
deploy_script:
  - ps: |
      # Creating project artifact
      $stagingDirectory = (Resolve-Path ..).Path
      $manifest = Join-Path $pwd "PowerShellGuard.psd1"
      $manifest_hash = $executioncontext.invokecommand.invokescript((Get-Content $manifest -Raw))[0]
      [version]$version = $manifest_hash['ModuleVersion']
      $manifest_hash['ModuleVersion'] = "$($version.major).$($version.minor).$($env:APPVEYOR_BUILD_NUMBER)"
      $manifest_hash.Remove('PrivateData')
      New-ModuleManifest -Path $manifest @manifest_hash
      $zipFilePath = Join-Path $stagingDirectory "$(Split-Path $pwd -Leaf).zip"
      Add-Type -assemblyname System.IO.Compression.FileSystem
      [System.IO.Compression.ZipFile]::CreateFromDirectory($pwd, $zipFilePath)

      irm 'https://raw.githubusercontent.com/smurawski/AppVeyorSampleHelper/master/TestHelper.psm1' | invoke-expression
      # Creating NuGet package artifact
      New-Nuspec -packageName $env:APPVEYOR_PROJECT_NAME -version $manifest_hash['ModuleVersion'] -author $manifest_hash['Author'] -owners $manifest_hash['Author'] -licenseUrl "https://github.com/smurawski/PowerShellGuard/blob/master/LICENSE" -projectUrl "https://github.com/$($env:APPVEYOR_REPO_NAME)" -packageDescription $env:APPVEYOR_PROJECT_NAME -destinationPath .
      nuget pack ".\$($env:APPVEYOR_PROJECT_NAME).nuspec" -outputdirectory .
      $nuGetPackageName = $env:APPVEYOR_PROJECT_NAME + "." + $manifest_hash['ModuleVersion'] + ".nupkg"
      $nuGetPackagePath = (Get-ChildItem $nuGetPackageName).FullName

      @(
          # You can add other artifacts here
          $zipFilePath,
          $nuGetPackagePath
      ) | % {
          Write-Host "Pushing package $_ as Appveyor artifact"
          Push-AppveyorArtifact $_
        }
